name: Terraform pipeline  other branches
on:
  push:
    branches-ignore: ["master"]
  workflow_dispatch:
    inputs:
      actions:
        description: 'What to execute'
        required: true
        default: 'plan'
        type: choice
        options:
        - plan
        - apply

jobs:
  terraform_dev:
    name: 'Terraform  Dev'
    runs-on: ubuntu-latest
    outputs:
      branches: ${{ steps.get_branches.outputs.branches }}
    steps:
    - name: Extract brach name
      run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >>$GITHUB_OUTPUT
      id: extract_branch  
        
    - name: Chekout branch
      uses: actions/checkout@v1
      with:
        ref: ${{ steps.extract_branch.outputs.branch }}
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Terraform Setup
      uses: hashicorp/setup-terraform@v1
      
    - name: Terraform Init
      run: terraform init
    
    - name: Terraform plan or apply dev
      run: |
        terraform workspace select dev
        terraform apply -h
        if [[ "${{github.event.inputs.actions}}" == "apply" ]]; then terraform apply -auto-approve -input=false ; else terraform plan -input=false ; fi
        
        
  terraform_stage:
    name: 'Terraform  Stage'
    runs-on: ubuntu-latest
    steps:
    - name: Chekout branch
      uses: actions/checkout@v1
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Terraform Setup
      uses: hashicorp/setup-terraform@v1
      
    - name: Terraform Init
      run: terraform init
    
    - name: Terraform plan or apply stage
      run: |
        terraform workspace select stage
        if [[ "${{github.event.inputs.actions}}" ]]; then terraform  "${{github.event.inputs.actions}}" -input=false ; else terraform plan -input=false ; fi
        
  terraform_prod:
    name: 'Terraform  Prod'
    runs-on: ubuntu-latest
    steps:
    - name: Chekout branch
      uses: actions/checkout@v1
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Terraform Setup
      uses: hashicorp/setup-terraform@v1
      
    - name: Terraform Init
      run: terraform init
           
    - name: Terraform plan or apply prod
      run: |
        terraform workspace select prod
        if [[ "${{github.event.inputs.actions}}" ]]; then terraform  "${{github.event.inputs.actions}}" -input=false ; else terraform plan -input=false ; fi
